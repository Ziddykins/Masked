{
  "version": 3,
  "sources": ["../functions.js", "../popup/js/popup.js"],
  "sourcesContent": ["console.log(Date.now() + \" \" + document.currentScript.src);\r\n\r\nfunction status_message(message, type = \"default\") {\r\n    let text_color = 'text-black';\r\n\r\n    if (type == \"success\") {\r\n        text_color = \"text-success\";\r\n    } else {\r\n        text_color = \"error\";\r\n    }\r\n\r\n    $('#status').html(message);\r\n    $(\"#status\").fadeIn(2000);\r\n    $(\"#status\").fadeOut(1000);\r\n    $(\"#status\")[0]\r\n        .attributes[1]\r\n        .nodeValue.replace(/text-(black|success|danger)/, 'text-black');\r\n}\r\n\r\nHTMLElement.prototype.sort_options = function () {\r\n    Array.prototype.slice.call(this.options).sort(function (a, b) {\r\n        return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\r\n    }).forEach(function (option, index) {\r\n        this.appendChild(option);\r\n    }, this);\r\n};\r\n\r\nfunction add_menu_badges() {\r\n    let secrets_menu_item = document.getElementById(\"list-secrets-list\");\r\n    let regex_menu_item = document.getElementById(\"list-regex-list\");\r\n    let elements_menu_item = document.getElementById(\"list-elements-list\");\r\n\r\n    let secrets_list = document.getElementById(\"secrets-list\");\r\n    let regexes_list = document.getElementById(\"regex-list\");\r\n    let secrets_ele_list = document.getElementById(\"secrets-element-list\");\r\n    let regex_ele_list = document.getElementById(\"regex-element-list\");\r\n\r\n    let secrets_badge = document.createElement('span');\r\n    let regex_badge = document.createElement('span');\r\n    let secrets_ele_badge = document.createElement('span');\r\n    let regex_ele_badge = document.createElement('span');\r\n\r\n    let spacer = document.createElement('span');\r\n    spacer.innerText = ' / ';\r\n\r\n    if (!document.getElementById('secrets-badge')) {\r\n        secrets_badge.className = \"badge text-bg-warning rounded-pill float-end\";\r\n        secrets_badge.innerText = secrets_list.length;\r\n        secrets_badge.id = 'secrets-badge';\r\n        secrets_badge.name = 'secrets-badge';\r\n    } else {\r\n        document.getElementById('secrets-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    if (!document.getElementById('secrets-badge')) {\r\n        regex_badge.className = \"badge text-bg-warning rounded-pill float-end\";\r\n        regex_badge.innerText = regexes_list.length;\r\n        regex_badge.id = 'regex-badge';\r\n        regex_badge.name = 'regex-badge';\r\n    } else {\r\n        document.getElementById('secrets-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    if (!document.getElementById('secrets-ele-badge') && !document.getElementById('regex-ele-badge')) {\r\n        secrets_ele_badge.className = \"badge text-bg-danger rounded-pill float-end\";\r\n        secrets_ele_badge.innerText = secrets_ele_list.length;\r\n        secrets_ele_badge.id = 'secrets-ele-badge';\r\n        secrets_ele_badge.name = 'secrets-ele-badge';\r\n\r\n        regex_ele_badge.className = \"badge text-bg-success rounded-pill float-end\";\r\n        regex_ele_badge.innerText = regex_ele_list.length;\r\n        regex_ele_badge.id = 'regex-ele-badge';\r\n        regex_ele_badge.name = 'regex-ele-badge';\r\n    } else {\r\n        document.getElementById('secrets-ele-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-ele-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    secrets_menu_item.appendChild(secrets_badge);\r\n    regex_menu_item.appendChild(regex_badge);\r\n    elements_menu_item.appendChild(secrets_ele_badge);\r\n    elements_menu_item.appendChild(regex_ele_badge);\r\n}\r\n\r\nfunction populate_popup() {\r\n    browser.storage.local.get().then((response) => {\r\n        storage_data = response.masked_data;\r\n\r\n        let secrets_list = document.getElementById(\"secrets-list\");\r\n        let regex_list = document.getElementById(\"regex-list\");\r\n        let secrets_ele_list = document.getElementById(\"secrets-element-list\");\r\n        let regex_ele_list = document.getElementById(\"regex-element-list\");\r\n\r\n        let max_depth = document.getElementById(\"option-max-depth\");\r\n        let depth_label = document.getElementById(\"option-depth-label\");\r\n\r\n        max_depth.value = storage_data.options.max_depth;\r\n        depth_label.innerText = ` (${storage_data.options.max_depth})`;\r\n\r\n        let toggle_switches = [\r\n            'secrets-in-regex',\r\n            'regex-in-secrets',\r\n            'mask-emails',\r\n            'dark-mode',\r\n            'enable-regex',\r\n            'enable-secrets',\r\n            'exceed-max-depth'\r\n        ];\r\n\r\n        for (const key in toggle_switches) {\r\n            let selector = 'option-toggle-' + toggle_switches[key];\r\n            let toggle_switch = document.getElementById(selector);\r\n            let stored_val = storage_data.options[toggle_switches[key].replaceAll(\"-\", \"_\")];\r\n            toggle_switch.checked = stored_val;\r\n\r\n            console.log(`settings toggle_switches[${key}] = ${toggle_switches[key].replaceAll(\"-\", \"_\")}`);\r\n        }\r\n\r\n        if (document.getElementById('option-toggle-exceed-max-depth').checked === true) {\r\n            max_depth.max = max_depth.value;\r\n        } else {\r\n            max_depth.max = 35;\r\n        }\r\n\r\n        for (let i = 0; i < storage_data.lists.secrets.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_sec_${i}`;\r\n            list_option.name = `lst_sec_${i}`;\r\n            list_option.text = storage_data.lists.secrets[i];\r\n            secrets_list.appendChild(list_option);\r\n        };\r\n\r\n        for (let i = 0; i < storage_data.lists.regexes.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_rgx_${i}`;\r\n            list_option.name = `lst_rgx_${i}`;\r\n            list_option.text = storage_data.lists.regexes[i];\r\n            regex_list.appendChild(list_option);\r\n        };\r\n\r\n        for (let i = 0; i < storage_data.lists.secrets_elements.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_sec_ele_${i}`;\r\n            list_option.name = `lst_sec_ele_${i}`;\r\n            list_option.text = storage_data.lists.secrets_elements[i];\r\n            secrets_ele_list.appendChild(list_option);\r\n        }\r\n\r\n        for (let i = 0; i < storage_data.lists.regex_elements.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_rgx_ele_${i}`;\r\n            list_option.name = `lst_rgx_ele_${i}`;\r\n            list_option.text = storage_data.lists.regex_elements[i];\r\n            regex_ele_list.appendChild(list_option);\r\n        }\r\n\r\n        add_menu_badges();\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    });\r\n}\r\n\r\nasync function set_masked_obj(data) {\r\n    let current = await get_masked_obj();\r\n    let storage_data = { ...current, ...data };\r\n    await update_masked_obj(storage_data);\r\n}\r\n\r\nasync function update_masked_obj(data) {\r\n    browser.storage.local.set({ masked_data: data })\r\n        .then((response) => {\r\n            status_message(response);\r\n        }).catch((error) => {\r\n            return error;\r\n        });\r\n\r\n    status_message(\"Saved storage!!!\");\r\n\r\n    return true;\r\n}\r\n\r\nasync function get_masked_obj() {\r\n    let temp = await browser.storage.local.get();\r\n    let storage_data = temp.masked_data || null;\r\n\r\n    if (!storage_data) {\r\n        console.log(\"We didn't get an object from get_masked_obj\");\r\n        storage_data = {\r\n            lists: {\r\n                regexes: [],\r\n                secrets: [],\r\n                regex_elements: [],\r\n                secrets_elements: [],\r\n                exclude: [],\r\n            },\r\n\r\n            options: {\r\n                dark_mode: false,\r\n                enable_regex: true,\r\n                enable_secrets: true,\r\n                secrets_in_regex: false,\r\n                regex_in_secrets: false,\r\n                mask_emails: false,\r\n                exceed_max_depth: false,\r\n                mask_style: 0,\r\n                max_depth: 5,\r\n            },\r\n\r\n            location: {\r\n                script: \"functions.js\",\r\n                last: \"none\",\r\n            },\r\n\r\n            version: 2.1,\r\n            creds: null\r\n        };\r\n    }\r\n\r\n    return storage_data;\r\n}\r\n\r\nmodule.exports = {\r\n    set_masked_obj: set_masked_obj,\r\n    get_masked_obj: get_masked_obj,\r\n    populate_popup: populate_popup,\r\n    status_message: status_message,\r\n}", "// This is the one that can't access browser.storage\r\nconst { populate_popup, add_menu_badges } = require('../../functions.js');\r\nconsole.log(Date.now() + \" \" + document.currentScript.src);\r\n\r\nvar storage_data = {};\r\nvar focused_option = null;\r\n\r\n\r\nfunction send_suggestion() {\r\n    let suggestion = {\r\n        idx:     document.getElementById(\"suggestion-type-dropdown\").selectedIndex,\r\n        example: document.getElementById(\"suggestion-example\").value,\r\n        input:   document.getElementById(\"suggestion-input\").value\r\n    };\r\n\r\n    suggestion.type = document.getElementById(\"suggestion-type-dropdown\").options[suggestion.idx].innerText;\r\n\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: \"https://masked.memelife.ca/suggestion\",\r\n        data: JSON.stringify(suggestion),\r\n        contentType: \"application/json\",\r\n        dataType: \"json\",\r\n\r\n        success: function (response) {\r\n            status_message(response.resp, \"success\");\r\n        },\r\n        error: function (xhr, status, error) {\r\n            console.error(xhr, status, error);\r\n            status_message(`Error: [${xhr.status}] ${xhr.statusText} - ${error}`, \"error\");\r\n        }\r\n    });\r\n}\r\n\r\nfunction init() {\r\n    return browser.storage.local.get().then(async (resp) => {    \r\n        storage_data = resp.masked_data;\r\n        storage_data.creds = await c();\r\n\r\n        console.log(\r\n            '%c%c\uFD3E%c\u2591%c\u2592%c Masked%cInitialized %c\u2592%c\u2591%c\uFD3F',\r\n                'text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0.2em blue;',\r\n                'color:#fff; font-weight:999',\r\n                'color:#383838; background-color:#383838; font-weight:999;',\r\n                'color:#121212; background-color:#121212; font-weight:999;',\r\n                'text-shadow: 1px 1px 2px white, 0 0 1em aliceblue; color:#000; background-color:#0d6efd; font-weight:999;',\r\n                'text-shadow: 1px 1px 1px aliceblue, 0 0 1.1em white; color:#0d6efd; background-color:#000; font-weight:100;',\r\n                'color:#121212; background-color:#121212; font-weight:999;',\r\n                'color:#383838; background-color:#383838; font-weight:999;',\r\n                'color:#fff; font-weight:999'\r\n        );\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    });\r\n}\r\n\r\ndocument.getElementById('suggestion-submit').addEventListener('click', send_suggestion);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n    await init();\r\n    populate_popup();\r\n    console.log(\"Masked Initialized\");\r\n\r\n    const container = document.querySelector('#settings-content');\r\n    const dark_mode = storage_data.options.dark_mode;\r\n \r\n    const Default = {\r\n        scrollbarTheme: \"os-theme-dark\",\r\n        scrollbarClickScroll: true,\r\n        scrollbarAutoHide: true,\r\n        scrollbarVisibility: \"auto\"\r\n    };\r\n\r\n    if (dark_mode) {\r\n        document.body.setAttribute('data-bs-theme', 'dark');\r\n        Default.scrollbarTheme = 'os-theme-light';\r\n    } else {\r\n        document.body.setAttribute('data-bs-theme', 'light');\r\n        Default.scrollbarTheme = 'os-theme-dark';\r\n    }\r\n    \r\n    if (container && typeof OverlayScrollbarsGlobal?.OverlayScrollbars !== \"undefined\") {\r\n        OverlayScrollbarsGlobal.OverlayScrollbars(container, {\r\n            scrollbars: {\r\n                theme: Default.scrollbarTheme,\r\n                autohide: Default.scrollbarAutoHide,\r\n                visibility: Default.scrollbarVisibility\r\n            },\r\n            overflow: {\r\n                x: 'hidden'\r\n            }\r\n        }, {\r\n            updated(osInstance, osUpdatedArgs) {\r\n                //console.log(osInstance);\r\n                //console.log(osUpdatedArgs);\r\n            }\r\n        });\r\n    }\r\n\r\n    document.getElementById('suggestion-clear').addEventListener('click', () => {\r\n        document.getElementById(\"suggestion-input\").value = \"\";\r\n        document.getElementById(\"suggestion-example\").value = \"\";\r\n        document.getElementById(\"suggestion-type-dropdown\").selectedIndex = 0;\r\n    });\r\n\r\n    document.querySelectorAll('#option-toggle-dark-mode, #masked-logo').forEach(\r\n        (ele) => {\r\n            ele.addEventListener('click', () => {\r\n            console.log(\"Toggled dark mode\");\r\n            storage_data.options.dark_mode = !storage_data.options.dark_mode;\r\n\r\n            document.body.setAttribute('data-bs-theme', !storage_data.options.dark_mode ? 'light' : 'dark');\r\n            Default.scrollbarTheme = dark_mode ? 'os-theme-light' : 'os-theme-dark';\r\n            OverlayScrollbarsGlobal.OverlayScrollbars(container, {\r\n                scrollbars: {\r\n                    theme: Default.scrollbarTheme\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n    document.querySelectorAll('input[id^=\"option-\"]').forEach((opt) => {\r\n        opt.addEventListener(\"click\", () => {\r\n            let clicked_option = opt.id.replace('option-', '');\r\n\r\n            if (clicked_option.match(/toggle-/)) {\r\n                clicked_option.replace('toggle-', '');\r\n                storage_data.options[clicked_option] = opt.checked;\r\n            } else {\r\n                clicked_option.replace('toggle-', '');\r\n                storage_data.options[clicked_option] = opt.value\r\n            }\r\n            \r\n            console.log(`storage_data.options[${clicked_option}] ${storage_data.options[clicked_option]}`);\r\n\r\n            browser.runtime.sendMessage({\r\n                \"masked_cmd\": \"set_lists\",\r\n                \"sender\": \"popup.js\",\r\n                \"data\": storage_data,\r\n                'info': opt.id + ' ' + clicked_option\r\n            }).then((resp) => {\r\n                console.log(\"sent lists to be saved\");\r\n                console.log(`got back ${resp}`);\r\n            }).catch((error) => {\r\n                console.error(error);\r\n            });\r\n        });\r\n    });\r\n\r\n    document.querySelectorAll(\"button[id^='secrets'], button[id^='regex']\").forEach(\r\n        function(e) {\r\n            e.addEventListener(\"click\",\r\n                async function(b) {\r\n                    let selector     = null;\r\n                    let target_list  = null;\r\n                    let target_id    = null;\r\n                    let list_sel     = null;\r\n\r\n                    if (b.target.id.match(/^secrets/)) {\r\n                        target_list = document.getElementById('secrets-list');\r\n                        selector = \"option[id^='lst_sec']\";\r\n                        target_id = 'lst_sec_';\r\n                        list_sel = \"add-secrets\";\r\n                    } else if (b.target.id.match(/^regex/)) {\r\n                        target_list = document.getElementById('regex-list');\r\n                        selector = \"option[id^='lst_rgx']\";\r\n                        target_id = 'lst_rgx_';\r\n                        list_sel = \"add-regex\";\r\n                    } \r\n                    \r\n                    if (b.target.id.match(/remove$/)) {\r\n                        let count = 0\r\n\r\n                        document.querySelectorAll(selector).forEach(\r\n                            function(s) {\r\n                                if (s.selected) { \r\n                                    s.remove();\r\n                                    count++;\r\n                                }\r\n                            }\r\n                        );\r\n                \r\n                        status_message(`${count} items removed`);\r\n                    } else if (b.target.id.match(/append$/)) {\r\n                        let lst_count = target_list.length;\r\n                        let list_option = document.createElement('option');\r\n\r\n                        list_option.id = `${target_id}${lst_count++}`;\r\n                        list_option.name = list_option.id;\r\n                        list_option.text = document.getElementById(list_sel).value;\r\n                        \r\n                        document.getElementById(list_sel).value = \"\";\r\n                        target_list.appendChild(list_option);\r\n\r\n                        status_message(`secrets added`);\r\n                    } else if (b.target.id.match(/clear$/)) {\r\n                        $(target_list).empty();\r\n                        status_message(`Secrets cleared`);\r\n                    }\r\n\r\n                    set_masked_obj().catch((error) => {\r\n                        console.error(error);\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    );\r\n\r\n    document.querySelectorAll('option[id^=\"lst_sec_ele\"], option[id^=\"lst_rgx_ele\"]').forEach(\r\n        (sel_ele) => {\r\n            console.log(\"we made it woo\");\r\n            sel_ele.addEventListener(\"click\", (e) => {\r\n                console.log(`Selected ${e.id}`);\r\n                focused_option = e;\r\n            });\r\n        }\r\n    );\r\n\r\n\r\n\r\n    document.getElementById('add-regex-element').addEventListener(\"focus\", () => {\r\n        selected_list = document.getElementById(\"regex-element-list\");\r\n        status_message(\"reg\");\r\n    });\r\n\r\n    document.querySelectorAll('button[id^=\"ele-\"]').forEach((e) => {\r\n        e.addEventListener(\"click\", (b) => {\r\n            if (b.target.id == 'ele-append') {\r\n                let list_option = document.createElement('option');\r\n                let lst_count = focused_list.length;\r\n                let selector  = null;\r\n                let target_id = null;\r\n                let input_sel  = null;\r\n\r\n                if (focused_list.id.match(/secrets/)) {\r\n                    selector  = \"option[id^='lst_sec_ele']\";\r\n                    target_id = 'lst_sec_ele';\r\n                    input_sel  = document.getElementById(\"add-secrets-element\");\r\n                } else if (b.target.id.match(/regex/)) {\r\n                    selector = \"option[id^='lst_rgx_ele']\";\r\n                    target_id = 'lst_rgx_ele';\r\n                    input_sel  = document.getElementById(\"add-regex-element\");\r\n                }\r\n\r\n                list_option.id = `${target_id}${lst_count++}`;\r\n                list_option.name = list_option.id;\r\n                list_option.text = input_sel.value;\r\n                \r\n                input_sel.value = \"\";\r\n                focused_list.appendChild(list_option);\r\n\r\n                status_message(`secrets added`);\r\n            } else if (b.target.id == 'ele-clear') {\r\n\r\n            } else if (b.target.id == 'ele-remove') {\r\n\r\n            }\r\n        });\r\n    });\r\n\r\n    document.getElementById('option-max-depth').oninput = () => {\r\n        document.getElementById('option-depth-label').innerText = ` (${document.getElementById('option-max-depth').value})`;\r\n        storage_data.options.max_depth = document.getElementById('option-max-depth').value;\r\n        set_masked_obj().catch((error) => {\r\n            console.error(error);\r\n        });\r\n    };\r\n\r\n    document.getElementById('option-toggle-exceed-max-depth').addEventListener('click', () => {\r\n        let override_enabled = document.getElementById('option-toggle-exceed-max-depth').checked;\r\n        storage_data.options.exceed_max_depth = override_enabled;\r\n\r\n        \r\n        if (override_enabled) {\r\n            document.getElementById('option-max-depth').setAttribute('max', '1000');\r\n            storage_data.options.max_depth = 1000;\r\n        } else {\r\n            document.getElementById('option-max-depth').setAttribute('max', '35');\r\n            document.getElementById('option-depth-label').innerText = ' (35)';\r\n            storage_data.options.max_depth = 35;\r\n        }\r\n\r\n        set_masked_obj().catch((error) => {\r\n            console.error(error);\r\n        });\r\n    });\r\n\r\n    if (storage_data.options.exceed_max_depth === true) {\r\n        document.getElementById('option-max-depth').setAttribute('max', 1000); \r\n    }\r\n\r\n});\r\n\r\n\r\nasync function c(d) {\r\n    return a(d).then((data) => {\r\n        storage_data.creds = btoa(data);\r\n    });\r\n}\r\n\r\nfunction a(b) {\r\n    return crypto.subtle.digest(\"SHA-512\", new TextEncoder(\"utf-8\").encode(b))\r\n        .then(buf => {\r\n            return Array.prototype.map.call(new Uint8Array(buf), x => (('00'+x.toString(16)).slice(-2))).join('');\r\n        });\r\n}\r\n"],
  "mappings": "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",
  "names": ["status_message", "a", "add_menu_badges", "populate_popup", "set_masked_obj", "storage_data", "storage_data"]
}
