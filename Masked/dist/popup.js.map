{
  "version": 3,
  "sources": ["../logger.js", "../functions.js", "../popup/js/popup.js"],
  "sourcesContent": ["function popup_log(message, type='info')  {\r\n    const out_message = `[${Date().toLocaleString().split(\" GMT\")[0]}](${type}) -> ${message}\\n`;\r\n    const logEl = document.getElementById(\"logs\");\r\n\r\n    if (logEl) {\r\n        logEl.textContent += `${out_message}`;\r\n    }\r\n}\r\n\r\nmodule.exports = { popup_log }", "const { popup_log } = require('./logger.js');\r\n\r\npopup_log(Date.now() + \" \" + document.currentScript.src, 'info');\r\n\r\nfunction status_message(message, type = \"default\") {\r\n    let text_color = 'text-black';\r\n\r\n    if (type == \"success\") {\r\n        text_color = \"text-success\";\r\n    } else {\r\n        text_color = \"error\";\r\n    }\r\n\r\n    $('#status').html(message);\r\n    $(\"#status\").fadeIn(2000);\r\n    $(\"#status\").fadeOut(1000);\r\n    $(\"#status\")[0]\r\n        .attributes[1]\r\n        .nodeValue.replace(/text-(black|success|danger)/, 'text-black');\r\n}\r\n\r\nHTMLElement.prototype.sort_options = function () {\r\n    Array.prototype.slice.call(this.options).sort(function (a, b) {\r\n        return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\r\n    }).forEach(function (option, index) {\r\n        this.appendChild(option);\r\n    }, this);\r\n};\r\n\r\nfunction add_menu_badges() {\r\n    let secrets_menu_item = document.getElementById(\"list-secrets-list\");\r\n    let regex_menu_item = document.getElementById(\"list-regex-list\");\r\n    let elements_menu_item = document.getElementById(\"list-elements-list\");\r\n\r\n    let secrets_list = document.getElementById(\"secrets-list\");\r\n    let regexes_list = document.getElementById(\"regex-list\");\r\n    let secrets_ele_list = document.getElementById(\"secrets-element-list\");\r\n    let regex_ele_list = document.getElementById(\"regex-element-list\");\r\n\r\n    let secrets_badge = document.createElement('span');\r\n    let regex_badge = document.createElement('span');\r\n    let secrets_ele_badge = document.createElement('span');\r\n    let regex_ele_badge = document.createElement('span');\r\n\r\n    let spacer = document.createElement('span');\r\n    spacer.innerText = ' / ';\r\n\r\n    if (!document.getElementById('secrets-badge')) {\r\n        secrets_badge.className = \"badge text-bg-warning rounded-pill float-end\";\r\n        secrets_badge.innerText = secrets_list.length;\r\n        secrets_badge.id = 'secrets-badge';\r\n        secrets_badge.name = 'secrets-badge';\r\n    } else {\r\n        document.getElementById('secrets-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    if (!document.getElementById('secrets-badge')) {\r\n        regex_badge.className = \"badge text-bg-warning rounded-pill float-end\";\r\n        regex_badge.innerText = regexes_list.length;\r\n        regex_badge.id = 'regex-badge';\r\n        regex_badge.name = 'regex-badge';\r\n    } else {\r\n        document.getElementById('secrets-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    if (!document.getElementById('secrets-ele-badge') && !document.getElementById('regex-ele-badge')) {\r\n        secrets_ele_badge.className = \"badge text-bg-danger rounded-pill float-end\";\r\n        secrets_ele_badge.innerText = secrets_ele_list.length;\r\n        secrets_ele_badge.id = 'secrets-ele-badge';\r\n        secrets_ele_badge.name = 'secrets-ele-badge';\r\n\r\n        regex_ele_badge.className = \"badge text-bg-success rounded-pill float-end\";\r\n        regex_ele_badge.innerText = regex_ele_list.length;\r\n        regex_ele_badge.id = 'regex-ele-badge';\r\n        regex_ele_badge.name = 'regex-ele-badge';\r\n    } else {\r\n        document.getElementById('secrets-ele-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-ele-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    secrets_menu_item.appendChild(secrets_badge);\r\n    regex_menu_item.appendChild(regex_badge);\r\n    elements_menu_item.appendChild(secrets_ele_badge);\r\n    elements_menu_item.appendChild(regex_ele_badge);\r\n}\r\n\r\nfunction populate_popup() {\r\n    browser.storage.local.get().then((response) => {\r\n        storage_data = response.masked_data;\r\n\r\n        let secrets_list = document.getElementById(\"secrets-list\");\r\n        let regex_list = document.getElementById(\"regex-list\");\r\n        let secrets_ele_list = document.getElementById(\"secrets-element-list\");\r\n        let regex_ele_list = document.getElementById(\"regex-element-list\");\r\n\r\n        let max_depth = document.getElementById(\"option-max-depth\");\r\n        let depth_label = document.getElementById(\"option-depth-label\");\r\n\r\n        max_depth.value = storage_data.options.max_depth;\r\n        depth_label.innerText = ` (${storage_data.options.max_depth})`;\r\n\r\n        let toggle_switches = [\r\n            'secrets-in-regex',\r\n            'regex-in-secrets',\r\n            'mask-emails',\r\n            'dark-mode',\r\n            'enable-regex',\r\n            'enable-secrets',\r\n            'exceed-max-depth'\r\n        ];\r\n\r\n        for (const key in toggle_switches) {\r\n            let selector = 'option-toggle-' + toggle_switches[key];\r\n            let toggle_switch = document.getElementById(selector);\r\n            let stored_val = storage_data.options[toggle_switches[key].replaceAll(\"-\", \"_\")];\r\n            toggle_switch.checked = stored_val;\r\n\r\n            popup_log(`settings toggle_switches[${key}] = ${toggle_switches[key].replaceAll(\"-\", \"_\")}`, 'info');\r\n        }\r\n\r\n        if (document.getElementById('option-toggle-exceed-max-depth').checked === true) {\r\n            max_depth.max = max_depth.value;\r\n        } else {\r\n            max_depth.max = 35;\r\n        }\r\n\r\n        for (let i = 0; i < storage_data.lists.secrets.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_sec_${i}`;\r\n            list_option.name = `lst_sec_${i}`;\r\n            list_option.text = storage_data.lists.secrets[i];\r\n            secrets_list.appendChild(list_option);\r\n        };\r\n\r\n        for (let i = 0; i < storage_data.lists.regexes.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_rgx_${i}`;\r\n            list_option.name = `lst_rgx_${i}`;\r\n            list_option.text = storage_data.lists.regexes[i];\r\n            regex_list.appendChild(list_option);\r\n        };\r\n\r\n        for (let i = 0; i < storage_data.lists.secrets_elements.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_sec_ele_${i}`;\r\n            list_option.name = `lst_sec_ele_${i}`;\r\n            list_option.text = storage_data.lists.secrets_elements[i];\r\n            secrets_ele_list.appendChild(list_option);\r\n        }\r\n\r\n        for (let i = 0; i < storage_data.lists.regex_elements.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_rgx_ele_${i}`;\r\n            list_option.name = `lst_rgx_ele_${i}`;\r\n            list_option.text = storage_data.lists.regex_elements[i];\r\n            regex_ele_list.appendChild(list_option);\r\n        }\r\n\r\n        add_menu_badges();\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    });\r\n}\r\n\r\nasync function set_masked_obj(data) {\r\n    let current = await get_masked_obj();\r\n    let storage_data = { ...current, ...data };\r\n    await update_masked_obj(storage_data);\r\n}\r\n\r\nasync function update_masked_obj(data) {\r\n    browser.storage.local.set({ masked_data: data })\r\n        .then((response) => {\r\n            status_message(response);\r\n        }).catch((error) => {\r\n            return error;\r\n        });\r\n\r\n    popup_log(\"Saved storage!!!\", 'info');;\r\n\r\n    return true;\r\n}\r\n\r\nasync function get_masked_obj() {\r\n    let temp = await browser.storage.local.get();\r\n    let storage_data = temp.masked_data || null;\r\n\r\n    if (!storage_data) {\r\n        popup_log(`We didn't get an object from get_masked_obj`, 'info');\r\n        storage_data = {\r\n            lists: {\r\n                regexes: [],\r\n                secrets: [],\r\n                regex_elements: [],\r\n                secrets_elements: [],\r\n                exclude: [],\r\n            },\r\n\r\n            options: {\r\n                dark_mode: false,\r\n                enable_regex: true,\r\n                enable_secrets: true,\r\n                secrets_in_regex: false,\r\n                regex_in_secrets: false,\r\n                mask_emails: false,\r\n                exceed_max_depth: false,\r\n                mask_style: 0,\r\n                max_depth: 5,\r\n            },\r\n\r\n            location: {\r\n                script: \"functions.js\",\r\n                last: \"none\",\r\n            },\r\n\r\n            version: 2.1,\r\n            creds: null\r\n        };\r\n    }\r\n\r\n    return storage_data;\r\n}\r\n\r\nmodule.exports = {\r\n    set_masked_obj,\r\n    get_masked_obj,\r\n    update_masked_obj,\r\n    populate_popup,\r\n    status_message,\r\n    add_menu_badges,\r\n};", "// This is the one that can't access browser.storage\r\nconst { get_masked_obj, status_message } = require('../../functions')\r\nconst { popup_log } = require('../../logger.js'); // Import from logger\r\n\r\npopup_log(Date.now() + \" \" + document.currentScript.src, 'info');\r\n\r\nvar focused_option = null;\r\n\r\n\r\n\r\nfunction send_suggestion() {\r\n    let suggestion = {\r\n        idx:     document.getElementById(\"suggestion-type-dropdown\").selectedIndex,\r\n        example: document.getElementById(\"suggestion-example\").value,\r\n        input:   document.getElementById(\"suggestion-input\").value\r\n    };\r\n\r\n    suggestion.type = document.getElementById(\"suggestion-type-dropdown\").options[suggestion.idx].innerText;\r\n\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: \"https://masked.memelife.ca/suggestion\",\r\n        data: JSON.stringify(suggestion),\r\n        contentType: \"application/json\",\r\n        dataType: \"json\",\r\n\r\n        success: (response) => {\r\n            popup_log(response.resp, 'success');\r\n        },\r\n        error: function (xhr, status, error) {\r\n            console.error(xhr, status, error);\r\n            popup_log(`Error: [${xhr.status}] ${xhr.statusText} - ${error}`, 'error');\r\n        }\r\n    });\r\n}\r\n\r\nasync function init_data() {\r\n    let storage_data = await get_masked_obj()\r\n    this.creds = await c();\r\n\r\n        console.log(\r\n            '%c%c\uFD3E%c\u2591%c\u2592%c Masked%cinit_dataialized %c\u2592%c\u2591%c\uFD3F',\r\n                'text-shadow: 1px 1px 2px red, 0 0 1em blue, 0 0 0.2em blue;',\r\n                'color:#fff; font-weight:999',\r\n                'color:#383838; background-color:#383838; font-weight:999;',\r\n                'color:#121212; background-color:#121212; font-weight:999;',\r\n                'text-shadow: 1px 1px 2px white, 0 0 1em aliceblue; color:#000; background-color:#0d6efd; font-weight:999;',\r\n                'text-shadow: 1px 1px 1px aliceblue, 0 0 1.1em white; color:#0d6efd; background-color:#000; font-weight:100;',\r\n                'color:#121212; background-color:#121212; font-weight:999;',\r\n                'color:#383838; background-color:#383838; font-weight:999;',\r\n                'color:#fff; font-weight:999'\r\n        );\r\n\r\n}\r\n\r\ndocument.getElementById('suggestion-submit').addEventListener('click', send_suggestion);\r\n\r\nasync function c(d) {\r\n    return a(d).then((data) => {\r\n        storage_data.creds = btoa(data);\r\n    });\r\n}\r\n\r\nfunction a(b) {\r\n    return crypto.subtle.digest(\"SHA-512\", new TextEncoder(\"utf-8\").encode(b))\r\n        .then(buf => {\r\n            return Array.prototype.map.call(new Uint8Array(buf), x => (('00'+x.toString(16)).slice(-2))).join('');\r\n        });\r\n}\r\n\r\nmodule.exports = {\r\n    init_data: init_data,\r\n    focused_option: () => focused_option,\r\n}"],
  "mappings": "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",
  "names": ["storage_data", "storage_data"]
}
