{
  "version": 3,
  "sources": ["../logger.js", "../functions.js", "../masked.js"],
  "sourcesContent": ["function popup_log(message, type='info')  {\r\n    const out_message = `[${Date().toLocaleString().split(\" GMT\")[0]}](${type}) -> ${message}\\n`;\r\n    const logEl = document.getElementById(\"logs\");\r\n\r\n    if (logEl) {\r\n        logEl.textContent += `${out_message}`;\r\n    }\r\n}\r\n\r\nmodule.exports = { popup_log }", "const { popup_log } = require('./logger.js');\r\n\r\npopup_log(Date.now() + \" \" + document.currentScript.src, 'info');\r\n\r\nfunction status_message(message, type = \"default\") {\r\n    let text_color = 'text-black';\r\n\r\n    if (type == \"success\") {\r\n        text_color = \"text-success\";\r\n    } else {\r\n        text_color = \"error\";\r\n    }\r\n\r\n    $('#status').html(message);\r\n    $(\"#status\").fadeIn(2000);\r\n    $(\"#status\").fadeOut(1000);\r\n    $(\"#status\")[0]\r\n        .attributes[1]\r\n        .nodeValue.replace(/text-(black|success|danger)/, 'text-black');\r\n}\r\n\r\nHTMLElement.prototype.sort_options = function () {\r\n    Array.prototype.slice.call(this.options).sort(function (a, b) {\r\n        return a.text > b.text ? 1 : a.text < b.text ? -1 : 0;\r\n    }).forEach(function (option, index) {\r\n        this.appendChild(option);\r\n    }, this);\r\n};\r\n\r\nfunction add_menu_badges() {\r\n    let secrets_menu_item = document.getElementById(\"list-secrets-list\");\r\n    let regex_menu_item = document.getElementById(\"list-regex-list\");\r\n    let elements_menu_item = document.getElementById(\"list-elements-list\");\r\n\r\n    let secrets_list = document.getElementById(\"secrets-list\");\r\n    let regexes_list = document.getElementById(\"regex-list\");\r\n    let secrets_ele_list = document.getElementById(\"secrets-element-list\");\r\n    let regex_ele_list = document.getElementById(\"regex-element-list\");\r\n\r\n    let secrets_badge = document.createElement('span');\r\n    let regex_badge = document.createElement('span');\r\n    let secrets_ele_badge = document.createElement('span');\r\n    let regex_ele_badge = document.createElement('span');\r\n\r\n    let spacer = document.createElement('span');\r\n    spacer.innerText = ' / ';\r\n\r\n    if (!document.getElementById('secrets-badge')) {\r\n        secrets_badge.className = \"badge text-bg-warning rounded-pill float-end\";\r\n        secrets_badge.innerText = secrets_list.length;\r\n        secrets_badge.id = 'secrets-badge';\r\n        secrets_badge.name = 'secrets-badge';\r\n    } else {\r\n        document.getElementById('secrets-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    if (!document.getElementById('secrets-badge')) {\r\n        regex_badge.className = \"badge text-bg-warning rounded-pill float-end\";\r\n        regex_badge.innerText = regexes_list.length;\r\n        regex_badge.id = 'regex-badge';\r\n        regex_badge.name = 'regex-badge';\r\n    } else {\r\n        document.getElementById('secrets-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    if (!document.getElementById('secrets-ele-badge') && !document.getElementById('regex-ele-badge')) {\r\n        secrets_ele_badge.className = \"badge text-bg-danger rounded-pill float-end\";\r\n        secrets_ele_badge.innerText = secrets_ele_list.length;\r\n        secrets_ele_badge.id = 'secrets-ele-badge';\r\n        secrets_ele_badge.name = 'secrets-ele-badge';\r\n\r\n        regex_ele_badge.className = \"badge text-bg-success rounded-pill float-end\";\r\n        regex_ele_badge.innerText = regex_ele_list.length;\r\n        regex_ele_badge.id = 'regex-ele-badge';\r\n        regex_ele_badge.name = 'regex-ele-badge';\r\n    } else {\r\n        document.getElementById('secrets-ele-badge').innerText = secrets_list.length;\r\n        document.getElementById('regex-ele-badge').innerText = regexes_list.length;\r\n    }\r\n\r\n    secrets_menu_item.appendChild(secrets_badge);\r\n    regex_menu_item.appendChild(regex_badge);\r\n    elements_menu_item.appendChild(secrets_ele_badge);\r\n    elements_menu_item.appendChild(regex_ele_badge);\r\n}\r\n\r\nfunction populate_popup() {\r\n    browser.storage.local.get().then((response) => {\r\n        storage_data = response.masked_data;\r\n\r\n        let secrets_list = document.getElementById(\"secrets-list\");\r\n        let regex_list = document.getElementById(\"regex-list\");\r\n        let secrets_ele_list = document.getElementById(\"secrets-element-list\");\r\n        let regex_ele_list = document.getElementById(\"regex-element-list\");\r\n\r\n        let max_depth = document.getElementById(\"option-max-depth\");\r\n        let depth_label = document.getElementById(\"option-depth-label\");\r\n\r\n        max_depth.value = storage_data.options.max_depth;\r\n        depth_label.innerText = ` (${storage_data.options.max_depth})`;\r\n\r\n        let toggle_switches = [\r\n            'secrets-in-regex',\r\n            'regex-in-secrets',\r\n            'mask-emails',\r\n            'dark-mode',\r\n            'enable-regex',\r\n            'enable-secrets',\r\n            'exceed-max-depth'\r\n        ];\r\n\r\n        for (const key in toggle_switches) {\r\n            let selector = 'option-toggle-' + toggle_switches[key];\r\n            let toggle_switch = document.getElementById(selector);\r\n            let stored_val = storage_data.options[toggle_switches[key].replaceAll(\"-\", \"_\")];\r\n            toggle_switch.checked = stored_val;\r\n\r\n            popup_log(`settings toggle_switches[${key}] = ${toggle_switches[key].replaceAll(\"-\", \"_\")}`, 'info');\r\n        }\r\n\r\n        if (document.getElementById('option-toggle-exceed-max-depth').checked === true) {\r\n            max_depth.max = max_depth.value;\r\n        } else {\r\n            max_depth.max = 35;\r\n        }\r\n\r\n        for (let i = 0; i < storage_data.lists.secrets.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_sec_${i}`;\r\n            list_option.name = `lst_sec_${i}`;\r\n            list_option.text = storage_data.lists.secrets[i];\r\n            secrets_list.appendChild(list_option);\r\n        };\r\n\r\n        for (let i = 0; i < storage_data.lists.regexes.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_rgx_${i}`;\r\n            list_option.name = `lst_rgx_${i}`;\r\n            list_option.text = storage_data.lists.regexes[i];\r\n            regex_list.appendChild(list_option);\r\n        };\r\n\r\n        for (let i = 0; i < storage_data.lists.secrets_elements.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_sec_ele_${i}`;\r\n            list_option.name = `lst_sec_ele_${i}`;\r\n            list_option.text = storage_data.lists.secrets_elements[i];\r\n            secrets_ele_list.appendChild(list_option);\r\n        }\r\n\r\n        for (let i = 0; i < storage_data.lists.regex_elements.length; i++) {\r\n            let list_option = document.createElement('option');\r\n            list_option.id = `lst_rgx_ele_${i}`;\r\n            list_option.name = `lst_rgx_ele_${i}`;\r\n            list_option.text = storage_data.lists.regex_elements[i];\r\n            regex_ele_list.appendChild(list_option);\r\n        }\r\n\r\n        add_menu_badges();\r\n    }).catch((error) => {\r\n        console.error(error);\r\n    });\r\n}\r\n\r\nasync function set_masked_obj(data) {\r\n    let current = await get_masked_obj();\r\n    let storage_data = { ...current, ...data };\r\n    await update_masked_obj(storage_data);\r\n}\r\n\r\nasync function update_masked_obj(data) {\r\n    browser.storage.local.set({ masked_data: data })\r\n        .then((response) => {\r\n            status_message(response);\r\n        }).catch((error) => {\r\n            return error;\r\n        });\r\n\r\n    popup_log(\"Saved storage!!!\", 'info');;\r\n\r\n    return true;\r\n}\r\n\r\nasync function get_masked_obj() {\r\n    let temp = await browser.storage.local.get();\r\n    let storage_data = temp.masked_data || null;\r\n\r\n    if (!storage_data) {\r\n        popup_log(`We didn't get an object from get_masked_obj`, 'info');\r\n        storage_data = {\r\n            lists: {\r\n                regexes: [],\r\n                secrets: [],\r\n                regex_elements: [],\r\n                secrets_elements: [],\r\n                exclude: [],\r\n            },\r\n\r\n            options: {\r\n                dark_mode: false,\r\n                enable_regex: true,\r\n                enable_secrets: true,\r\n                secrets_in_regex: false,\r\n                regex_in_secrets: false,\r\n                mask_emails: false,\r\n                exceed_max_depth: false,\r\n                mask_style: 0,\r\n                max_depth: 5,\r\n            },\r\n\r\n            location: {\r\n                script: \"functions.js\",\r\n                last: \"none\",\r\n            },\r\n\r\n            version: 2.1,\r\n            creds: null\r\n        };\r\n    }\r\n\r\n    return storage_data;\r\n}\r\n\r\nmodule.exports = {\r\n    set_masked_obj,\r\n    get_masked_obj,\r\n    update_masked_obj,\r\n    populate_popup,\r\n    status_message,\r\n    add_menu_badges,\r\n};", "popup_log(`masked.js loaded`, 'info');\r\nconst { get_masked_obj, set_masked_obj } = require('./functions')\r\n\r\nasync function init() {\r\n    return browser.storage.local.get().then((resp) => {\r\n        storage_data = get_masked_object();\r\n        popup_log(`Masked storage loaded`, 'info');\r\n    }).catch((err) => {\r\n        console.error(\"Error getting storage data: \", err);\r\n    });\r\n}\r\n\r\ndo_masks();\r\n\r\nasync function do_masks() {\r\n    await init();\r\n    let secrets_t = storage_data.lists.secrets;\r\n    let regexes_t = storage_data.lists.regexes;\r\n    let search_elements = [];\r\n    let search_regexes = [];\r\n    let found = [];\r\n    let secrets = [];\r\n\r\n    if (storage_data.options.enable_secrets === true) {\r\n        if (storage_data.options.regex_in_secrets) {\r\n            popup_log(`regex in secrets enabled, combining secrets and regexes`, 'info');\r\n            secrets = [...secrets_t, ...regexes_t];\r\n        }\r\n\r\n        let out = '';\r\n        storage_data.lists.secrets.forEach((s) => {\r\n            out +='*[name*=\"' + s + '\"],*[id*=\"' + s + '\"]';\r\n        });\r\n        popup_log(out, 'info');\r\n        \r\n\r\n        search_regexes = secrets_t.map(secret => {\r\n            if (secret.startsWith(\"/\") && secret.endsWith(\"/\")) {\r\n                return new RegExp(secret.substring(1, secret.length - 1));\r\n            } else {\r\n                return new RegExp(secret);\r\n            }\r\n        });\r\n\r\n        search_regexes.forEach((re) => {\r\n            let check_emails = storage_data.options.mask_emails;\r\n            search_elements = document.querySelectorAll('*[name*=\"log\"],*[id*=\"log\"]');\r\n            \r\n            search_elements.forEach((e) => {\r\n                if (re.test(e.id) || re.test(e.name)) {\r\n                    if (check_emails == false && (e.id.match(/email/i) || e.name.match(/email/i))) {\r\n                        return;\r\n                    }\r\n                    found.push(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    if (storage_data.options.enable_regex) {\r\n        await maskRegexMatches();\r\n    }\r\n    \r\n    await browser.runtime.sendMessage({\r\n        \"masked_cmd\": \"pop_window\",\r\n        \"sender\": \"masked.js\",\r\n        \"value\": JSON.stringify(found)\r\n    });\r\n\r\n    found.forEach((f) => {\r\n        if (!document.getElementById(f.id + '-masked')) {\r\n            let holder;\r\n\r\n            switch (f.tagName.toLowerCase()) {\r\n                case 'input':\r\n                    if (f.type != 'password' && f.type != 'hidden') {\r\n                        f.type = 'password';\r\n                        holder = getHolderElement(f.value, f.type);\r\n                    }\r\n                    break;\r\n                case 'div':\r\n                case 'span':\r\n                    holder = getHolderElement(f.textContent, f);\r\n                    f.textContent = \"*\".repeat(f.textContent.length);\r\n                    break;\r\n                default:\r\n                    popup_log(f, 'info');\r\n                    holder.value = f.value;\r\n                    f.value = \"*\".repeat(f.value.length);\r\n                    break;\r\n            }\r\n            f.before(holder);\r\n        }\r\n    });\r\n\r\n    await browser.runtime.sendMessage({\r\n        \"masked_cmd\": \"update_badge\",\r\n        \"sender\": \"masked.js\",\r\n        \"value\": found.length\r\n    });\r\n}\r\nasync function maskRegexMatches() {\r\n    let [depth, maxDepth] = [1, storage_data.options.max_depth];\r\n    let regexes = storage_data.lists.regexes;\r\n    let secrets = storage_data.lists.secrets;\r\n    let textNodes = [];\r\n    \r\n    if (storage_data.options.secrets_in_regex) {\r\n        regexes = [...secrets, ...regexes];\r\n    }\r\n   \r\n    function getTextNodes(node) {\r\n        if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== \"\") {\r\n            textNodes.push(node);\r\n        } else {\r\n            if (depth <= maxDepth) {\r\n                popup_log(`depth: ${depth}`, 'info');\r\n                depth++;\r\n                node.childNodes.forEach(getTextNodes);\r\n                depth--;\r\n            } else {\r\n                popup_log(`Maximum node-depth of ${maxDepth} reached, skipping`, 'info');\r\n                return;\r\n            }\r\n        }\r\n    }\r\n   \r\n    getTextNodes(document.body);\r\n    popup_log(`${textNodes.length} nodes found`, 'info');\r\n    \r\n    textNodes.forEach((textNode) => {\r\n        regexes.forEach((regex) => {\r\n            let rgx = new RegExp(regex.trim(), 'igm');\r\n\r\n            if (rgx.test(textNode.nodeValue)) {\r\n                let originalText = textNode.nodeValue;\r\n                let maskedText = originalText.replace(rgx, (match) => \"*\".repeat(match.length));\r\n                let holderElement = getHolderElement(originalText, textNode, 1);\r\n                //let cloneElement = document.createElement(textNode.type);\r\n\r\n                //cloneElement.textContent = maskedText;\r\n\r\n                //if (typeof textNode.parentNode !== 'undefined' && textNode.parentNode !== null) {\r\n                    //textNode.parentNode.replaceChild(span, textNode);\r\n                    //span.parentNode.insertBefore(holderElement, span.nextSibling);\r\n                    textNode.nodeValue = maskedText;\r\n                    textNode.before(holderElement);\r\n                //} else {\r\n                    //textNode.replaceWith(span);\r\n           //     }\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction getHolderElement(originalText, attachedElement, type) {\r\n    let holder = document.createElement(\"a\");\r\n    \r\n    holder.innerHTML = type?'\uD83E\uDDD0':'\uD83E\uDD78';\r\n    holder.style.position = 'absolute';\r\n    holder.style.zIndex = '300';\r\n    holder.style.left = \"100%\";\r\n    holder.style.marginLeft = '5px';\r\n    holder.style.cursor = 'copy';\r\n\r\n    holder.setAttribute('data-original', originalText);\r\n    holder.addEventListener(\"click\", (attachedElement) => {\r\n        navigator.clipboard.writeText(attachedElement.target.getAttribute('data-original'));\r\n    });\r\n\r\n    return holder;\r\n}\r\n\r\nfunction maskElement(element) {\r\n    let holder;\r\n    switch (element.tagName.toLowerCase()) {\r\n        case 'input':\r\n            if (element.type != 'password' && element.type != 'hidden') {\r\n                element.type = 'password';\r\n                holder = getHolderElement(element.value, element);\r\n            }\r\n            break;\r\n        case 'div':\r\n        case 'span':\r\n            holder = getHolderElement(element.textContent, element);\r\n            element.textContent = \"*\".repeat(element.textContent.length);\r\n            break;\r\n        default:\r\n            popup_log(element, 'info');\r\n            holder.value = element.value;\r\n            element.value = \"*\".repeat(element.value.length);\r\n            break;\r\n    }\r\n    element.before(holder);\r\n}"],
  "mappings": "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",
  "names": ["popup_log", "popup_log", "set_masked_obj", "get_masked_obj", "storage_data", "attachedElement"]
}
